on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - "main"
    tags:
      - "v*.*.*"

jobs:
  build-kots-lint:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/setup-go@v2.1.3
        with:
          go-version: '^1.17.4'

      - name: setup env
        run: |
          echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        shell: bash

      - uses: actions/checkout@v2

      - run: make test build

  goreleaser:
    runs-on: ubuntu-latest
    needs: build-kots-lint
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Unshallow
        run: git fetch --prune --unshallow

      - uses: actions/setup-go@v2.1.3
        with:
          go-version: '^1.17.4'

      - run: sudo apt-get -qq -y install

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v1
        with:
          version: "v0.166.1"
          args: release --rm-dist --config deploy/.goreleaser.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: build-kots-lint
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v1
        with:
          repository: replicated/kots-lint
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
          tag_with_ref: true

  flyio:
    runs-on: ubuntu-latest
    needs: build-kots-lint
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
      - uses: superfly/flyctl-actions@1.1
        with:
          args: deploy --app kots-lint --image-label ${GITHUB_REF:10} -e DD_AGENT_HOST=dd-agent
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  flyio-dd-agent:
    runs-on: ubuntu-latest
      #    needs: flyio
      #    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
        with:
          repository: 'DataDog/datadog-agent'
          ref: '7.35.2'
      - run: git fetch --prune --unshallow
      - run: cp Dockerfiles/agent/amd64/Dockerfile dd-agent.Dockerfile
      - name: download-dd-artifact
        run: curl https://s3.amazonaws.com/apt.datadoghq.com/pool/d/da/datadog-agent_7-1_amd64.deb -o datadog-agent_7-1_amd64.deb
      - run: ls
      - uses: superfly/flyctl-actions@1.1
        with:
          args: deploy --config ./dd-fly.toml --app dd-agent --build-arg DD_AGENT_ARTIFACT=./datadog-agent_7-1_amd64.deb --dockerfile ./dd-agent.Dockerfile -e DD_API_KEY=${{ secrets.DD_API_KEY }} -e DD_SITE="datadoghq.com" -e DD_APM_NON_LOCAL_TRAFFIC=true
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
